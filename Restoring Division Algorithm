module bm(y,a,b);
      input signed [64:0] a, b;
       output signed [129:0] y;
       reg signed [129:0] y;
       reg [1:0] temp;
       integer i;
       reg bn,y_temp;
       reg [64:0] bbar;
       always @ (a, b)
       begin
       y = 130'd0;
       bn = 1'd0;
       for (i = 0; i < 65; i = i + 1)
       begin
       temp = {a[i], bn};
       bbar = - b;
  case (temp)
       2'b10 : y [129 : 65] = y [129 : 65] + bbar;
       2'b01 : y [129 : 65] = y [129 : 65] + b;
       default : begin end
       endcase
       y_temp = y[129];
       y = y >> 1;
       y[129] = y_temp;
       bn = a[i];
           end
       //if (Y == 130'd)
           //begin
               //Z = - Z;
           //end 
       end       
endmodule

